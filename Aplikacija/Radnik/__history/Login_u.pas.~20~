unit Login_u;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Edit, FMX.Controls.Presentation, Radnik_u, DataModule_u, System.JSON;

type
  TForm2 = class(TForm)
    Label1: TLabel;
    Edit1: TEdit;
    btnLogin: TButton;
    procedure btnLoginClick(Sender: TObject);
  private
    { Private declarations }
  public
    procedure HandleLoginResponse(JsonObj: TJSONObject);
  end;

var
  Form2: TForm2;
  MainForm: TMainForm;

implementation

{$R *.fmx}
{$R *.LgXhdpiPh.fmx ANDROID}

procedure TForm2.btnLoginClick(Sender: TObject);
var
  Password: Integer;
  JsonObj: TJSONObject;
begin
  if not TryStrToInt(Trim(Edit1.Text), Password) then
  begin
    ShowMessage('Please enter a valid numeric password.');
    Exit;
  end;
  if not DataModule1.IdTCPClient1.Connected then
    DataModule1.StartClientConnection;

    JsonObj := TJSONObject.Create;
    try
      JsonObj.AddPair('type', 'login');
      JsonObj.AddPair('password', TJSONNumber.Create(Password));

      DataModule1.SendMessageToServer(JsonObj.ToString);
      ShowMessage('Message sent');
    finally
      JsonObj.Free;
    end;

end;

procedure TForm2.HandleLoginResponse(JsonObj: TJSONObject);
var
WorkerID, ShiftID: Integer;
begin
    WorkerID := JsonObj.GetValue<Integer>('worker_id');
    ShiftID := JsonObj.GetValue<Integer>('shift_id');

    if WorkerID <> -1 then
    begin
      ShowMessage('Login successful! Worker ID: ' + IntToStr(WorkerID));
      MainForm := TMainForm.Create(Self);
      MainForm.WorkerID := WorkerID;
      MainForm.ShiftID := ShiftID;
      MainForm.Show;
      Form2.Free;
    end
    else
    begin
      ShowMessage('Login failed: Worker not found.');
    end;
end;

end.
