unit Testiranje_u;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Layouts,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Edit, FireDAC.Stan.Param, Data.DB, Anketa_u;

type
  TForm3 = class(TForm)
    ScrollBox1: TScrollBox;
    useless: TLabel;
    Edit1: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Edit2: TEdit;
    Label11: TLabel;
    Button4: TButton;
    LabelKiselost: TLabel;
    LabelSlatkoca: TLabel;
    LabelJacina: TLabel;
    LabelOsvezavajuce: TLabel;
    LabelUkupno: TLabel;
    Button5: TButton;
    procedure LoadButtons;
    procedure ButtonClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure LoadAverages(ATestID: Integer);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
  private
    { Private declarations }
  public
    SelectedTestID: Integer;
  end;

var
  Form3: TForm3;

implementation

{$R *.fmx}

uses
Program_u;

procedure TForm3.LoadButtons;
var
  Btn: TButton;
  I: Integer;
begin

  for I := ScrollBox1.ControlsCount - 1 downto 0 do
    if ScrollBox1.Controls[I] is TButton then
      ScrollBox1.Controls[I].Free;

  Form1.FDQuery1.Close;
  Form1.FDQuery1.SQL.Text := 'SELECT test_id, ime FROM Testiranje';
  Form1.FDQuery1.Open;

  I := 0;
  while not Form1.FDQuery1.Eof do
  begin
    Btn := TButton.Create(Self);
    Btn.Parent := ScrollBox1;

    Btn.Text := Form1.FDQuery1.FieldByName('ime').AsString;

    Btn.Position.Y := I * 35;
    Btn.Position.X := 10;
    Btn.Width := ScrollBox1.Width - 20;
    Btn.Height := 30;
    Btn.Tag := Form1.FDQuery1.FieldByName('test_id').AsInteger;

    Btn.OnClick := ButtonClick;

    Inc(I);
    Form1.FDQuery1.Next;
  end;
end;

procedure TForm3.Button1Click(Sender: TObject);
begin
  Form3.Free;
end;

procedure TForm3.Button2Click(Sender: TObject);
begin
  Form1.FDQuery1.Close;
  Form1.FDQuery1.SQL.Text := 'UPDATE Testiranje SET recept = :pRecept WHERE test_id = :pID';

  Form1.FDQuery1.ParamByName('pRecept').AsString := Edit1.Text;
  Form1.FDQuery1.ParamByName('pID').AsInteger := StrToInt(Label4.Text);

  try
    Form1.FDQuery1.ExecSQL;
    LoadButtons;
    ShowMessage('Recept je uspesno izmenjen.');
  except
    on E: Exception do
      ShowMessage('Error: ' + E.Message);
  end;
end;

procedure TForm3.Button3Click(Sender: TObject);
begin

  try

    Form1.FDQueryAction.Close;
    Form1.FDQueryAction.SQL.Text := 'DELETE FROM Ocena WHERE test_id = :pID';
    Form1.FDQueryAction.ParamByName('pID').AsInteger := StrToInt(Label4.Text);
    Form1.FDQueryAction.ExecSQL;

    Form1.FDQueryAction.Close;
    Form1.FDQueryAction.SQL.Text := 'DELETE FROM Testiranje WHERE test_id = :pID';
    Form1.FDQueryAction.ParamByName('pID').AsInteger := StrToInt(Label4.Text);
    Form1.FDQueryAction.ExecSQL;

    ShowMessage('Recept je uspesno obrisan.');
    LoadButtons;

  except
    on E: Exception do
      ShowMessage('Error: ' + E.Message);
  end;
end;


procedure TForm3.Button4Click(Sender: TObject);
begin
  Form1.FDQueryAction.Close;
  Form1.FDQueryAction.SQL.Text :=
    'INSERT INTO Testiranje (ime, recept) VALUES (:pIme, :pRecept)';

  Form1.FDQueryAction.ParamByName('pIme').AsString := Edit2.Text;
  Form1.FDQueryAction.ParamByName('pRecept').AsString := Edit1.Text;

  try
    Form1.FDQueryAction.ExecSQL;
    ShowMessage('Recept je uspesno dodan.');
    LoadButtons;
  except
    on E: Exception do
      ShowMessage('Error: ' + E.Message);
  end;
end;

procedure TForm3.Button5Click(Sender: TObject);
begin
  if SelectedTestID = 0 then
  begin
    ShowMessage('Selektujte recept koji ocenjujete!');
    Exit;
  end;

  Form4 := TForm4.Create(Self);
  Form4.Show;
end;

procedure TForm3.ButtonClick(Sender: TObject);
var
  Btn: TButton;
begin
  Btn := Sender as TButton;
  Label4.Text := IntToStr(Btn.Tag);
  Label2.Text := Btn.Text;
  SelectedTestID := Btn.Tag;

  Form1.FDQuery1.SQL.Text := 'SELECT recept FROM Testiranje WHERE test_id = :id';
  Form1.FDQuery1.ParamByName('id').AsInteger := Btn.Tag;
  Form1.FDQuery1.Open;

  Edit1.Text := Form1.FDQuery1.FieldByName('recept').AsString;
  LoadAverages(Btn.tag);
end;

procedure TForm3.LoadAverages(ATestID: Integer);
begin
  Form1.FDQuery2.Close;
  Form1.FDQuery2.SQL.Text :=
    'SELECT ' +
    '  AVG(kiselost) AS avg_kiselost, ' +
    '  AVG(slatkoca) AS avg_slatkoca, ' +
    '  AVG(jacina) AS avg_jacina, ' +
    '  AVG(osvezavajuce) AS avg_osvezavajuce, ' +
    '  AVG(ukupno) AS avg_ukupno ' +
    'FROM Ocena ' +
    'WHERE test_id = :pTestID';

  Form1.FDQuery2.ParamByName('pTestID').AsInteger := ATestID;
  Form1.FDQuery2.Open;

  if not Form1.FDQuery2.IsEmpty then
  begin
    LabelKiselost.Text     := FormatFloat('0.00', Form1.FDQuery2.FieldByName('avg_kiselost').AsFloat);
    LabelSlatkoca.Text     := FormatFloat('0.00', Form1.FDQuery2.FieldByName('avg_slatkoca').AsFloat);
    LabelJacina.Text       := FormatFloat('0.00', Form1.FDQuery2.FieldByName('avg_jacina').AsFloat);
    LabelOsvezavajuce.Text := FormatFloat('0.00', Form1.FDQuery2.FieldByName('avg_osvezavajuce').AsFloat);
    LabelUkupno.Text       := FormatFloat('0.00', Form1.FDQuery2.FieldByName('avg_ukupno').AsFloat);
  end
  else
  begin
    LabelKiselost.Text     := '-';
    LabelSlatkoca.Text     := '-';
    LabelJacina.Text       := '-';
    LabelOsvezavajuce.Text := '-';
    LabelUkupno.Text       := '-';
  end;
end;


end.
