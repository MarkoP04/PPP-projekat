unit Naruci_u;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, IdBaseComponent, IdComponent,
  IdTCPConnection, IdTCPClient, System.JSON, FMX.Layouts, FMX.ListBox;

type
TFrameClass = class of TFrame;
  TForm2 = class(TForm)
    IdTCPClient1: TIdTCPClient;
    listBoxItems: TListBox;
    btnNaruci: TButton;
    Panel1: TPanel;
    Kafa: TButton;
    procedure FormCreate(Sender: TObject);
    procedure SendItems;
    procedure AddItemsDisplay;
    procedure btnNaruciClick(Sender: TObject);
    procedure ClearItems;
    procedure ShowFrame(NewFrameClass: TFrameClass);
    procedure KafaClick(Sender: TObject);
  private

  public
  FItems: TStringList;

  end;

var
  Form2: TForm2;
  ActiveFrame: TFrame;

implementation

{$R *.fmx}

uses
Gost_u, CoffeeFrame, CocktailFrame;

procedure TForm2.btnNaruciClick(Sender: TObject);
begin
Form1.Show;
Form2.Hide;
SendItems;
end;

procedure TForm2.KafaClick(Sender: TObject);
begin
 ShowFrame(CoffeeFrame.TFrame1);
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
  IdTCPClient1.Connect;
  FItems := TStringList.Create;
  FItems.NameValueSeparator := ',';
end;

procedure TForm2.AddItemsDisplay;
var
  i: Integer;
  Parts: TArray<string>;
begin
  listBoxItems.Clear;
  for i := 0 to FItems.Count - 1 do
  begin
    Parts := FItems.ValueFromIndex[i].Split([',']);
    if Length(Parts) = 2 then
      listBoxItems.Items.Add(FItems.Names[i] + ' x ' + Parts[0] + '     ' + Parts[1] + ' RSD');
  end;
end;

procedure TForm2.SendItems;
var
  JSONObject: TJSONObject;
  ItemsArray: TJSONArray;
  ItemObj: TJSONObject;
  i: Integer;
  Parts: TArray<string>;
begin
  JSONObject := TJSONObject.Create;
  ItemsArray := TJSONArray.Create;
  try
    JSONObject.AddPair('type', 'order');
    JSONObject.AddPair('table', Form1.TableNum);
    for i := 0 to FItems.Count - 1 do
    begin
      Parts := FItems.ValueFromIndex[i].Split([',']);
      if Length(Parts) < 2 then
        Continue;

      ItemObj := TJSONObject.Create;
      ItemObj.AddPair('name', FItems.Names[i]);
      ItemObj.AddPair('quantity', TJSONNumber.Create(StrToIntDef(Parts[0], 0)));
      ItemObj.AddPair('price', TJSONNumber.Create(StrToIntDef(Parts[1], 0)));
      ItemsArray.Add(ItemObj);
    end;
    JSONObject.AddPair('items', ItemsArray);

    IdTCPClient1.IOHandler.WriteLn(JSONObject.ToString);
  finally
    JSONObject.Free;
  end;
end;

procedure TForm2.ClearItems;
begin
  FItems.Clear;
  listBoxItems.Clear;
end;

procedure TForm2.ShowFrame(NewFrameClass: TFrameClass);
begin
  if Assigned(ActiveFrame) then
    FreeAndNil(ActiveFrame);

  ActiveFrame := NewFrameClass.Create(Self);
  ActiveFrame.Parent := Panel1;
end;

end.
